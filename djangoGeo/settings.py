"""
Django settings for djangoGeo project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
import socket
os.environ['PROJ_LIB'] = f"{os.environ.get('CONDA_PREFIX','')}/share/proj"
os.environ['GDAL_DATA'] = f"{os.environ.get('CONDA_PREFIX','')}/share"

from pathlib import Path
from decouple import config
import dj_database_url



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Database
if os.environ.get('CONDA_PREFIX','').startswith('/opt'):
    DATABASES = {'default': config('DATABASE_DOCKER', default=None, cast=dj_database_url.parse)}
else:
    DATABASES = {'default': config('DATABASE_LOCAL', default=None, cast=dj_database_url.parse)}

# Quick-start development settings - unsuitable for production
# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["127.0.0.1", "0.0.0.0", ".ryankeogh.xyz"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'world.apps.WorldConfig',
    'crispy_forms',
    'leaflet',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangoGeo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangoGeo.wsgi.application'

#Commented out for local deployment
# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
# if os.environ.get('CONDA_PREFIX', '').startswith('/opt'):
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.contrib.gis.db.backends.postgis',
#             'HOST': 'gis2022_db',
#             'NAME': 'gis',
#             'USER': 'docker',
#             'PASSWORD': 'docker',
#             'PORT': 5432
#         },
#     }
# else:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.contrib.gis.db.backends.postgis',
#             'HOST': 'localhost',
#             'NAME': 'gis',
#             'USER': 'docker',
#             'PASSWORD': 'docker',
#             'PORT': 25432
#         },
# }


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.contrib.gis.db.backends.postgis',
#         'HOST': 'localhost',
#         'NAME': 'gis',
#         'USER': 'docker',
#         'PASSWORD': 'docker',
#         'PORT': 25432
#     },
# }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CRISPY_TEMPLATE_PACK = 'bootstrap4'
CRISPY_FAIL_SILENTLY = not DEBUG

LEAFLET_CONFIG = {
    'DEFAULT_CENTER': (53.0, -8.0),
    'DEFAULT_ZOOM': 6,
    'MIN_ZOOM': 3,
    'MAX_ZOOM': 18,
    'RESET_VIEW': False,
    'SCALE': None,
    'OPACITY': 0.5,
    'MINIMAP': True,
}

LOGIN_REDIRECT_URL = "home"
LOGOUT_REDIRECT_URL = "home"

SECRET_KEY = config('SECRET_KEY', default=None)
DEPLOY_SECURE = config('DEPLOY_SECURE', default=False, cast=bool)


if socket.gethostname() == "ryankeogh@Ryans-MacBook-Pro":
    DATABASES["default"]["HOST"] = "localhost"
    DATABASES["default"]["PORT"] = 25432
else:
    DATABASES["default"]["HOST"] = "wmap-postgis"
    DATABASES["default"]["PORT"] = 5432

# Set DEPLOY_SECURE to True only for LIVE deployment
if DEPLOY_SECURE:
    DEBUG = False
    CSRF_COOKIE_SECURE = True
    SESSION_COOKIE_SECURE = True
    ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=lambda v: [s.strip() for s in v.split(',')])
    CSRF_TRUSTED_ORIGINS = config('CSRF_TRUSTED_ORIGINS', cast=lambda v: [s.strip() for s in v.split(',')])
else:
    DEBUG = True
    CSRF_COOKIE_SECURE = False
    SESSION_COOKIE_SECURE = False
    ALLOWED_HOSTS = ["127.0.0.1", "0.0.0.0", ".ryankeogh.xyz"]

